@SET_MAKE@

PLATFORM_VERSION = 4.2

common_ldflags = -module -avoid-version -export-symbols-regex init_mcs
if PLATFORM_WIN32
common_ldflags += -no-undefined
endif

CODEGEN_PATH = @CODEGEN_PATH@

# pyxfce_PYTHON = __init__.py

INCLUDES = $(PYTHON_INCLUDES)

pyxfceexecdir = $(pyexecdir)/xfce4
pyxfceexec_LTLIBRARIES = _mcs.la
pyxfceexec_PYTHON = mcs.py

mcs_built_headers = mcs-enum-types.h
mcs_built_sources = $(mcs_built_headers) mcs-enum-types.c

_mcs_la_CFLAGS = $(GTK_CFLAGS) $(PYTHON_CFLAGS) $(PYGTK_CFLAGS) $(XFCE4_MCS_CLIENT_CFLAGS) $(XFCE4_MCS_MANAGER_CFLAGS)
_mcs_la_LDFLAGS = $(common_ldflags)
_mcs_la_LIBADD = $(XFCE4_MCS_CLIENT_LIBS) $(XFCE4_MCS_MANAGER_LIBS) $(GTK_LIBS)
_mcs_la_SOURCES = \
	mcs_client.c \
	mcs_common.c \
	xfce-mcs-channel.c xfce-mcs-channel.h xfce-mcs-channel-private.h \
	xfce-mcs-client.c xfce-mcs-client.h xfce-mcs-client-private.h \
	xfce-mcs-manager.c xfce-mcs-manager.h xfce-mcs-manager-private.h \
	gen-xfce_mcs-manager.c gen-xfce_mcs-client.c gen-xfce_mcs-channel.c \
	mcs_manager.c \
	mcsmodule.c \
	$(mcs_built_sources)
	
##
## Rules to auto-generate built sources
##
## This is a bit tricky with automake, and non-trivial to implement. The
## rules below seem to work fine and don't seem to break the build, but
## they are only enabled in maintainer mode, so arbitrary users don't get
## trapped in automake's oddities. Therefore we ship the autogenerated
## files as part of the dist tarball.
##
if MAINTAINER_MODE
CLEANFILES =								\
	xgen-mcsc							\
	xgen-mcsh

DISTCLEANFILES =							\
	stamp-mcs-enum-types.h						\
	$(mcs_built_sources)

BUILT_SOURCES = \
	$(mcs_built_sources)

mcs-enum-types.h: stamp-mcs-enum-types.h
	@true
stamp-mcs-enum-types.h: $(mcs_headers) Makefile
	( cd $(srcdir) && glib-mkenums \
		--fhead "#ifndef __NETK_ENUM_TYPES_H__\n#define __NETK_ENUM_TYPES_H__\n" \
		--fprod "/* enumerations from \"@filename@\" */\n" \
		--vhead "GType @enum_name@_get_type (void);\n#define NETK_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n" \
		--ftail "#endif /* __NETK_ENUM_TYPES_H__ */" \
		$(mcs_headers) ) > xgen-mcsh \
	&& (cmp -s xgen-mcsh mcs-enum-types.h || cp xgen-mcsh mcs-enum-types.h) \
	&& rm -f xgen-mcsh \
	&& echo timestamp > $(@F)

mcs-enum-types.c: $(mcs_headers) Makefile
	( cd $(srcdir) && glib-mkenums \
		--fhead "#include <libxfcegui4/libxfcegui4.h>" \
		--fprod "\n/* enumerations from \"@filename@\" */" \
		--vhead "GType\n@enum_name@_get_type (void)\n{\n  static GType etype = 0;\n  if (etype == 0) {\n    static const G@Type@Value values[] = {" \
		--vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
		--vtail "      { 0, NULL, NULL }\n    };\n    etype = g_@type@_register_static (\"@EnumName@\", values);\n  }\n  return etype;\n}\n" \
		$(mcs_headers) ) >> xgen-mcsc \
	&& cp xgen-mcsc mcs-enum-types.c \
	&& rm -f xgen-mcsc

endif


defsdir = $(pkgdatadir)/$(PLATFORM_VERSION)/defs
defs_DATA = \
	mcs_client.defs \
	mcs_common.defs \
	mcs_manager.defs \
	xfce_mcs-channel.defs \
	xfce_mcs-manager.defs \
	xfce_mcs-client.defs

mcs_overrides = mcs_client.override  mcs_manager.override \
  mcs_common.override  template.override

EXTRA_DIST = $(defs_DATA) $(mcs_overrides) gen gobs
	
gen-xfce_mcs-client.c: xfce_mcs-client.defs xfce_mcs-client.override
	(cd $(srcdir) \
	 && $(PYTHON) $(CODEGEN_PATH)/codegen.py \
	   $(PYGTK_CODEGEN_DEFINES) \
	     --override xfce_mcs-client.override \
	     --register xfce_mcs-channel.defs \
	     --prefix pyxfce_mcs_client xfce_mcs-client.defs) > genx-$*.c \
	 && cp genx-$*.c $*.c \
	 && rm -f genx-$*.c

gen-xfce_mcs-manager.c: xfce_mcs-manager.defs xfce_mcs-manager.override
	(cd $(srcdir) \
	 && $(PYTHON) $(CODEGEN_PATH)/codegen.py \
	   $(PYGTK_CODEGEN_DEFINES) \
	     --override xfce_mcs-manager.override \
	     --register xfce_mcs-channel.defs \
	     --prefix pyxfce_mcs_manager xfce_mcs-manager.defs) > genx-$*.c \
	 && cp genx-$*.c $*.c \
	 && rm -f genx-$*.c

gen-xfce_mcs-channel.c: xfce_mcs-channel.defs xfce_mcs-channel.override
	(cd $(srcdir) \
	 && $(PYTHON) $(CODEGEN_PATH)/codegen.py \
	   $(PYGTK_CODEGEN_DEFINES) \
	     --override xfce_mcs-channel.override \
	     --prefix pyxfce_mcs_channel xfce_mcs-channel.defs) > genx-$*.c \
	 && cp genx-$*.c $*.c \
	 && rm -f genx-$*.c
