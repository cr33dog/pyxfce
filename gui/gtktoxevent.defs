;; -*- scheme -*-
; object definitions ...
;; Enumerations and flags ...

(define-enum FilterStatus
  (in-module "Xfce")
  (c-name "XfceFilterStatus")
  (gtype-id "XFCE_TYPE_FILTER_STATUS")
  (values
    '("stop" "XEV_FILTER_STOP")
    '("continue" "XEV_FILTER_CONTINUE")
  )
)


;; From /usr/include/xfce4/libxfcegui4/gtktoxevent.h

(define-function push_event_filter
  (c-name "xfce_push_event_filter")
  (return-type "XfceFilterStack*")
  (parameters
    '("XfceFilterSetup*" "setup")
    '("XfceFilter" "filter")
    '("gpointer" "data")
  )
)

(define-function pop_event_filter
  (c-name "xfce_pop_event_filter")
  (return-type "XfceFilterStack*")
  (parameters
    '("XfceFilterSetup*" "setup")
  )
)

(define-function add_event_win
  (c-name "xfce_add_event_win")
  (return-type "GdkWindow*")
  (parameters
    '("GdkScreen*" "gscr")
    '("long" "event_mask")
  )
)

(define-function init_event_filter
  (c-name "xfce_init_event_filter")
  (return-type "XfceFilterSetup*")
  (parameters
    '("gpointer" "data")
  )
)

(define-function close_event_filter
  (c-name "xfce_close_event_filter")
  (return-type "none")
  (parameters
    '("XfceFilterSetup*" "setup")
  )
)

(define-function pushEventFilter
  (c-name "pushEventFilter")
  (return-type "GtkToXEventFilterStack*")
  (parameters
    '("GtkToXEventFilter" "filter")
    '("gpointer" "data")
  )
)

(define-function popEventFilter
  (c-name "popEventFilter")
  (return-type "GtkToXEventFilterStack*")
)

(define-function initEventFilter
  (c-name "initEventFilter")
  (return-type "GtkToXEventFilterStack*")
  (parameters
    '("long" "event_mask")
    '("gpointer" "data")
    '("const-gchar*" "widget_name")
  )
)

(define-function closeEventFilter
  (c-name "closeEventFilter")
  (return-type "none")
)

(define-function getDefaultGtkWidget
  (c-name "getDefaultGtkWidget")
  (return-type "GtkWidget*")
)

(define-function getDefaultXWindow
  (c-name "getDefaultXWindow")
  (return-type "Window")
)

(define-function getGdkEventWindow
  (c-name "getGdkEventWindow")
  (return-type "GdkWindow*")
)

(define-function getDefaultGdkWindow
  (c-name "getDefaultGdkWindow")
  (return-type "GdkWindow*")
)


